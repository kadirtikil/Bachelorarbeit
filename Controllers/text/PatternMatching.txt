Pattern Matching ist ein leistungsstarkes Konzept in funktionalen Programmiersprachen, das verwendet wird, um Datenstrukturen zu dekonstruieren und auf ihre Bestandteile zu prüfen. Es ermöglicht eine elegante und deklarative Art, Daten zu manipulieren und auf sie zu reagieren.

### Wie funktioniert Pattern Matching?

Pattern Matching besteht aus dem Vergleich eines Wertes mit einer Menge von Mustern. Wenn der Wert mit einem der Muster übereinstimmt, wird der zugehörige Codeblock ausgeführt. Pattern Matching kann auf verschiedene Arten von Datenstrukturen angewendet werden, einschließlich Listen, Tupeln, Datentypen und mehr.

### Beispiel:

```haskell
-- Beispiel in Haskell

-- Definition einer einfachen Datenstruktur für geometrische Formen
data Shape = Circle Float | Rectangle Float Float

-- Funktion zur Berechnung der Fläche einer Form
area :: Shape -> Float
area (Circle r) = pi * r * r
area (Rectangle w h) = w * h

-- Beispielaufrufe
circleArea = area (Circle 5.0)  -- Berechnet die Fläche eines Kreises mit Radius 5.0
rectArea = area (Rectangle 3.0 4.0)  -- Berechnet die Fläche eines Rechtecks mit Breite 3.0 und Höhe 4.0

-- Ausgabe der Ergebnisse
main :: IO ()
main = do
    putStrLn ("Fläche des Kreises: " ++ show circleArea)
    putStrLn ("Fläche des Rechtecks: " ++ show rectArea)
