# Verteilte Systeme

Verteilte Systeme ermöglichen das Skalieren von Rechner-Ressourcen. 
Des Weiteren ermöglichen Verteilte-Systeme Fehlertoleranz.

Basic Issue: 
- Handhabung von mehreren Prozessoren.
- Teil Ausbrüche im System.

Wo kommt nun die Funktionale-Programmierung ins Spiel?

Features des FuP:
- Purity: Funktionen haben keine Seiteneffekte auf Objekte oder Daten an sich. Eine Pure-Function liefert auch bei dem gleichen Input immer denselben Output.
- immutability: Daten an sich können nach Ihrer deklaration nicht verändert werden.
- First-Class: Funktionen sind wie Datentypen. Können also variablen zugewiesen werden oder auch anderen Funktionen als Parameter  übergeben werden.
- Higher Order Functions: Funktionen die Funktionen entgegen nehmen und/oder Funktionen zurück liefern.
- ...

Wo kommen die Vorteile der FuP ins spiel?
Basic Issues werden durch Funktionale Programmierung erledigt.
- keine Seiteneffekte
- einfachere ressourcen einteilung durch nebenläufigkeit.
- functionen sind aufgebaut wie bausteine (Also einfacher nachzuvollziehen)

Für Abstraktion siehe Message Passing.

